#define _CRT_SECURE_NO_WARNINGS
#define strcasecmp _stricmp

#include <stdio.h>
#include <string.h>

struct Books {
    char Title[30];
    char Authors[30];
    char Press[30];
    int Page;
    int Price;
    char borrow[30];
};
struct Books books[] = {
    {"Truth", "John", "Century", 300, 20000, "available"},
    {"Love", "Paul", "Goods", 200, 15000, "available"},
    {"Joy", "James", "Cookie", 250, 18000, "available"},
    {"Thanks", "Mark", "Saesong", 240, 21000, "available"},
    {"God", "Johnson", "Jungjo", 450, 35000, "available"}
};

struct Books* search(const char* searchTitle) {
    for (int i = 0; i < 5; i++) {

        if (strcasecmp(searchTitle, books[i].Title) == 0) {
            return &books[i];
        }
    }

    return 0;
}

void borrow(struct Books* books) {
    if (strcasecmp(books->borrow, "available") == 0) {
        printf("대출 되었습니다.\n\n");
        strcpy(books->borrow, "borrowing");
    }
    else {
        printf("대출 중이라 대출 할 수 없습니다.\n\n");
      }
}

void returnBOOK(struct Books* books) {
    if (strcasecmp(books->borrow, "borrowing") == 0) {
        printf("책이 반납 되었습니다.\n\n");
        strcpy(books->borrow, "available");
    }
    else {
        printf("대출 되지 않은 책입니다.\n\n\n");
    }
}

int main() {
    int choice=0;

    while (choice != 5) {
        printf("1 [도서목록] 2 [검색] 3 [대출] 4 [반납] 5 [종료]");
        scanf("%d", &choice);
        if (choice == 1) {
            printf("%-8s%-8s%-8s%-8s%-8s\n", "Title", "Authors", "Press", "Page", "Price");
            printf("-----------------------------------------------------\n");
            for (int i = 0; i < 5; i++) {
                printf("%-8s%-8s%-8s%-8d%-8d\n", books[i].Title, books[i].Authors, books[i].Press, books[i].Page, books[i].Price);
            }
            printf("\n\n");
        }
        else if (choice == 2) {
            int flag = 0;
            char searchtitle[30];
            printf("검색할 도서를 입력하세요: ");
            scanf("%s", searchtitle);
            printf("\n");
            struct Books* found = search(searchtitle);
            if (found != 0) {
                flag = 1;
                printf("%-8s%-8s%-8s%-8s%-8s%-8s\n", "Title", "Authors", "Press", "Page", "Price", "borrow");
                printf("-----------------------------------------------------\n");
                printf("%-8s%-8s%-8s%-8d%-8d%-8s\n\n\n", found->Title, found->Authors, found->Press, found->Page, found->Price, found->borrow);
            }
            if (!flag) {
                printf("보유하고 있지 않은 책 제목입니다.\n");
                printf("\n\n");
            }         
        }
        else if (choice == 3) {
            char borrowtitle[30];
            printf("대출할 도서의 이름을 입력하세요: ");
            scanf("%s", borrowtitle);
            printf("\n");
            struct Books* borrowBook = search(borrowtitle);
            if (borrowBook != 0) {
                borrow(borrowBook);
                printf("%-8s%-8s%-8s%-8s%-8s%-8s\n", "Title", "Authors", "Press", "Page", "Price", "borrow");
                printf("-----------------------------------------------------\n");
                for (int i = 0; i < 5; i++) {
                    printf("%-8s%-8s%-8s%-8d%-8d%-8s\n", books[i].Title, books[i].Authors, books[i].Press, books[i].Page, books[i].Price, books[i].borrow);
                }
                printf("\n\n");
            }
            else {
                printf("보유하고 있지 않은 책 제목입니다.\n");
                printf("\n\n");
            }          
        }
        else if (choice == 4) {
            char returntitle[30];
            printf("반납할 도서의 이름을 입력하세요: ");
            scanf("%s", returntitle);
            printf("\n");
            struct Books* returnBooks = search(returntitle);
            if (returnBooks != 0) {
                returnBOOK(returnBooks);
                printf("%-8s%-8s%-8s%-8s%-8s%-8s\n", "Title", "Authors", "Press", "Page", "Price", "borrow");
                printf("-----------------------------------------------------\n");
                for (int i = 0; i < 5; i++) {
                    printf("%-8s%-8s%-8s%-8d%-8d%-8s\n", books[i].Title, books[i].Authors, books[i].Press, books[i].Page, books[i].Price, books[i].borrow);
                }
                printf("\n\n");
            }
            else {
                printf("보유하고 있지 않은 책 제목입니다.\n");
                printf("\n\n");
            }           
        }
        else if (choice == 5) {
            printf("프로그램을 종료합니다.\n");
            
        }
        else
            printf("잘못 입력하셨습니다. 다시 입력해주세요\n");
    }
    
    return 0;
}
